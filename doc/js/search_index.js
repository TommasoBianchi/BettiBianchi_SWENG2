var search_data = {"index":{"searchIndex":["acceptinvitationjob","applicationcontroller","applicationhelper","applicationjob","applicationrecord","break","breakcontroller","breakhelper","calendarcontroller","calendarhelper","category","computedbreak","constraint","contact","createmeetingjob","declineinvitationjob","defaultlocation","defaultlocationcontroller","defaultlocationhelper","email","group","groupuser","homepagecontroller","homepagehelper","incompleteuser","invitetomeetingjob","location","meeting","meetingcontroller","meetinghelper","meetingparticipation","meetingparticipationconflict","notificationcontroller","notificationhelper","operator","recomputemeetingparticipationsjob","social","socialuser","status","subject","travel","travelcontroller","travelhelper","travelstep","user","usercontroller","userhelper","value","accept()","accept_invitation()","add_break()","add_constraint()","add_contact()","best_travel()","change_preference_list()","check_path()","conflicting_meeting_participations()","contacts()","create()","create()","create()","create_break()","create_constraint()","create_meeting()","current_user()","decline()","decline_invitation()","delate_constraint()","delete()","delete_break()","delete_contact()","delete_email()","delete_social()","destroy()","digest()","digest()","edit()","first_creation()","first_def_location()","full_update_break()","get_day_by_name()","get_day_name()","get_description()","get_description()","get_description()","get_duration_integer_minutes()","get_ending_point()","get_first_location_after()","get_last_default_location_before()","get_location()","get_meeting_participaton()","get_name_of_wday()","get_name_surname()","get_participants()","get_path_value()","get_starting_point()","get_time()","get_time_from_integer()","get_user()","index()","index()","index()","invite_to_meeting()","invoke()","isemail()","log_in()","log_out()","new()","new()","new()","nominate_admin()","participants_page()","perform()","perform()","perform()","perform()","perform()","post_edit()","post_index()","primary_email()","recompute_meeting_participations()","remove_from_meeting()","resolve_warning()","search()","search_contacts()","settings()","shortest_path()","show()","show()","show()","show()","show_day()","show_month()","show_week()","update_all_breaks()","update_break()"],"longSearchIndex":["acceptinvitationjob","applicationcontroller","applicationhelper","applicationjob","applicationrecord","break","breakcontroller","breakhelper","calendarcontroller","calendarhelper","category","computedbreak","constraint","contact","createmeetingjob","declineinvitationjob","defaultlocation","defaultlocationcontroller","defaultlocationhelper","email","group","groupuser","homepagecontroller","homepagehelper","incompleteuser","invitetomeetingjob","location","meeting","meetingcontroller","meetinghelper","meetingparticipation","meetingparticipationconflict","notificationcontroller","notificationhelper","operator","recomputemeetingparticipationsjob","social","socialuser","status","subject","travel","travelcontroller","travelhelper","travelstep","user","usercontroller","userhelper","value","meetingcontroller#accept()","meetinghelper::accept_invitation()","breakcontroller#add_break()","usercontroller#add_constraint()","usercontroller#add_contact()","travelhelper::best_travel()","usercontroller#change_preference_list()","constraint#check_path()","meetingparticipation#conflicting_meeting_participations()","usercontroller#contacts()","defaultlocationcontroller#create()","meetingcontroller#create()","usercontroller#create()","breakcontroller#create_break()","usercontroller#create_constraint()","meetinghelper::create_meeting()","homepagehelper#current_user()","meetingcontroller#decline()","meetinghelper::decline_invitation()","usercontroller#delate_constraint()","defaultlocationcontroller#delete()","breakcontroller#delete_break()","usercontroller#delete_contact()","usercontroller#delete_email()","usercontroller#delete_social()","homepagecontroller#destroy()","incompleteuser::digest()","user::digest()","usercontroller#edit()","defaultlocationcontroller#first_creation()","defaultlocationcontroller#first_def_location()","breakhelper::full_update_break()","applicationcontroller#get_day_by_name()","applicationrecord#get_day_name()","break#get_description()","computedbreak#get_description()","constraint#get_description()","travel#get_duration_integer_minutes()","travel#get_ending_point()","user#get_first_location_after()","user#get_last_default_location_before()","applicationcontroller#get_location()","meeting#get_meeting_participaton()","applicationcontroller#get_name_of_wday()","meetingparticipation#get_name_surname()","meeting#get_participants()","subject#get_path_value()","travel#get_starting_point()","applicationrecord#get_time()","applicationcontroller#get_time_from_integer()","travel#get_user()","homepagecontroller#index()","notificationcontroller#index()","usercontroller#index()","meetinghelper::invite_to_meeting()","operator#invoke()","applicationcontroller#isemail()","homepagehelper#log_in()","homepagehelper#log_out()","defaultlocationcontroller#new()","meetingcontroller#new()","usercontroller#new()","meetingcontroller#nominate_admin()","meetingcontroller#participants_page()","acceptinvitationjob#perform()","createmeetingjob#perform()","declineinvitationjob#perform()","invitetomeetingjob#perform()","recomputemeetingparticipationsjob#perform()","usercontroller#post_edit()","homepagecontroller#post_index()","user#primary_email()","meetinghelper::recompute_meeting_participations()","meetingcontroller#remove_from_meeting()","notificationcontroller#resolve_warning()","usercontroller#search()","usercontroller#search_contacts()","usercontroller#settings()","travelhelper::shortest_path()","defaultlocationcontroller#show()","meetingcontroller#show()","travelcontroller#show()","usercontroller#show()","calendarcontroller#show_day()","calendarcontroller#show_month()","calendarcontroller#show_week()","breakhelper::update_all_breaks()","breakhelper::update_break()"],"info":[["AcceptInvitationJob","","AcceptInvitationJob.html","","<p>This class is only used to perform asynchronously the\nMeetingHelper@accept_invitation function\n"],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationRecord","","ApplicationRecord.html","",""],["Break","","Break.html","",""],["BreakController","","BreakController.html","",""],["BreakHelper","","BreakHelper.html","","<p>This is a helper module containing various functions to recompute flexible\nbreaks in various way\n"],["CalendarController","","CalendarController.html","",""],["CalendarHelper","","CalendarHelper.html","",""],["Category","","Category.html","",""],["ComputedBreak","","ComputedBreak.html","",""],["Constraint","","Constraint.html","",""],["Contact","","Contact.html","",""],["CreateMeetingJob","","CreateMeetingJob.html","","<p>This class is only used to perform asynchronously the\nMeetingHelper@create_meeting function\n"],["DeclineInvitationJob","","DeclineInvitationJob.html","","<p>This class is only used to perform asynchronously the\nMeetingHelper@decline_invitation function\n"],["DefaultLocation","","DefaultLocation.html","",""],["DefaultLocationController","","DefaultLocationController.html","",""],["DefaultLocationHelper","","DefaultLocationHelper.html","",""],["Email","","Email.html","",""],["Group","","Group.html","",""],["GroupUser","","GroupUser.html","",""],["HomepageController","","HomepageController.html","",""],["HomepageHelper","","HomepageHelper.html","",""],["IncompleteUser","","IncompleteUser.html","",""],["InviteToMeetingJob","","InviteToMeetingJob.html","","<p>This class is only used to perform asynchronously the\nMeetingHelper@invite_to_meeting function\n"],["Location","","Location.html","",""],["Meeting","","Meeting.html","",""],["MeetingController","","MeetingController.html","",""],["MeetingHelper","","MeetingHelper.html","","<p>This is a helper module containing functions to be called to update the\nscheduling of meeting participations …\n"],["MeetingParticipation","","MeetingParticipation.html","",""],["MeetingParticipationConflict","","MeetingParticipationConflict.html","",""],["NotificationController","","NotificationController.html","",""],["NotificationHelper","","NotificationHelper.html","",""],["Operator","","Operator.html","",""],["RecomputeMeetingParticipationsJob","","RecomputeMeetingParticipationsJob.html","","<p>This class is only used to perform asynchronously the\nMeetingHelper@recompute_meeting_participations …\n"],["Social","","Social.html","",""],["SocialUser","","SocialUser.html","",""],["Status","","Status.html","",""],["Subject","","Subject.html","",""],["Travel","","Travel.html","",""],["TravelController","","TravelController.html","",""],["TravelHelper","","TravelHelper.html","","<p>This is a helper module containing functions to compute travels between\ndifferent locations\n<p>It uses the …\n"],["TravelStep","","TravelStep.html","",""],["User","","User.html","",""],["UserController","","UserController.html","",""],["UserHelper","","UserHelper.html","",""],["Value","","Value.html","",""],["accept","MeetingController","MeetingController.html#method-i-accept","()","<p>This method is used to accept an invitation to a meeting\n"],["accept_invitation","MeetingHelper","MeetingHelper.html#method-c-accept_invitation","(meeting_participation, user)","<p>Update the schedule after accepting the invitation to a meeting\n<p>meeting_participations is a MeetingParticipation …\n"],["add_break","BreakController","BreakController.html#method-i-add_break","()","<p>Add a break to the db\n"],["add_constraint","UserController","UserController.html#method-i-add_constraint","()","<p>This method supports the create constraint page\n"],["add_contact","UserController","UserController.html#method-i-add_contact","()","<p>This method adds a user as contact\n"],["best_travel","TravelHelper","TravelHelper.html#method-c-best_travel","(from_location, to_location, user, departure_time = DateTime.now, arrival_time = nil)","<p>Compute the best travel for a user between two given locations taking into\nconsideration its preference …\n"],["change_preference_list","UserController","UserController.html#method-i-change_preference_list","()","<p>This method is used to change the preference list of a user\n"],["check_path","Constraint","Constraint.html#method-i-check_path","(path)","<p>This method is used by the travel helper to check if a travel is doable in\naccording to this constraint …\n"],["conflicting_meeting_participations","MeetingParticipation","MeetingParticipation.html#method-i-conflicting_meeting_participations","()","<p>This method returns the conflicting meeting participations of the current\none\n"],["contacts","UserController","UserController.html#method-i-contacts","()","<p>This method supports the show contacts page\n"],["create","DefaultLocationController","DefaultLocationController.html#method-i-create","()","<p>This method creates a new default location. It checks if the parameters\npassed by the user are correct …\n"],["create","MeetingController","MeetingController.html#method-i-create","()","<p>This meeting creates the new meeting. It checks if the parameters passed by\nthe user are correct and …\n"],["create","UserController","UserController.html#method-i-create","()","<p>This method is used to create a new user when it performs the login\n"],["create_break","BreakController","BreakController.html#method-i-create_break","()","<p>This method creates a break. It checks if the parameters passed by the user\nare correct and in the right …\n"],["create_constraint","UserController","UserController.html#method-i-create_constraint","()","<p>This method is used to create a new constraint and add it to the user&#39;s\nones\n"],["create_meeting","MeetingHelper","MeetingHelper.html#method-c-create_meeting","(start_date, end_date, title, abstract, location, user)","<p>This function has to be called to create both a meeting and a\nmeeting_participation and store them on …\n"],["current_user","HomepageHelper","HomepageHelper.html#method-i-current_user","()","<p>Returns the current logged-in user (if any).\n"],["decline","MeetingController","MeetingController.html#method-i-decline","()","<p>This method is used to decline an invitation to a meeting\n"],["decline_invitation","MeetingHelper","MeetingHelper.html#method-c-decline_invitation","(meeting_participation, user)","<p>Update the schedule after declining the invitation to a meeting\n<p>As a result some other MeetingParticipations …\n"],["delate_constraint","UserController","UserController.html#method-i-delate_constraint","()","<p>This method is used to delete a constraint\n"],["delete","DefaultLocationController","DefaultLocationController.html#method-i-delete","()","<p>This method delete a default location. It has to delete also all the\ntravels and travel step linked to …\n"],["delete_break","BreakController","BreakController.html#method-i-delete_break","()","<p>Delete a break from the db\n"],["delete_contact","UserController","UserController.html#method-i-delete_contact","()","<p>This method is used to delete a contact from user&#39;s contacts\n"],["delete_email","UserController","UserController.html#method-i-delete_email","()","<p>This method is used to delete an email from the edit page\n"],["delete_social","UserController","UserController.html#method-i-delete_social","()","<p>This method is used to delete a social form the user page\n"],["destroy","HomepageController","HomepageController.html#method-i-destroy","()","<p>This method permits to the user to log out from the system\n"],["digest","IncompleteUser","IncompleteUser.html#method-c-digest","(string)","<p>Returns the hash digest of the given string.\n"],["digest","User","User.html#method-c-digest","(string)","<p>Returns the hash digest of the given string.\n"],["edit","UserController","UserController.html#method-i-edit","()","<p>This method supports the edit user page\n"],["first_creation","DefaultLocationController","DefaultLocationController.html#method-i-first_creation","()","<p>This method actually creates the first default location\n"],["first_def_location","DefaultLocationController","DefaultLocationController.html#method-i-first_def_location","()","<p>This method supports the page the manage the creation of the first default\nlocation during the registration …\n"],["full_update_break","BreakHelper","BreakHelper.html#method-c-full_update_break","(b)","<p>Update every occurrence of a given break\n<p>b is a Break\n\n"],["get_day_by_name","ApplicationController","ApplicationController.html#method-i-get_day_by_name","(day_of_the_week)","<p>This method is used by the controllers to retrieve the right day index from\nthe day name\n"],["get_day_name","ApplicationRecord","ApplicationRecord.html#method-i-get_day_name","(day_of_the_week)","<p>This method is used to convert the day of the week from the format in which\nit is written in the db (integer) …\n"],["get_description","Break","Break.html#method-i-get_description","()","<p>This method is used bt the views to get the description of a break\n"],["get_description","ComputedBreak","ComputedBreak.html#method-i-get_description","()","<p>This method is used from the views to get the description of a computed\nbreak\n"],["get_description","Constraint","Constraint.html#method-i-get_description","()","<p>This method is used form the views to get the description of a constraint\n"],["get_duration_integer_minutes","Travel","Travel.html#method-i-get_duration_integer_minutes","()","<p>This method returns the duration of the travel in minutes\n"],["get_ending_point","Travel","Travel.html#method-i-get_ending_point","()","<p>This method returns the ending point of a travel\n"],["get_first_location_after","User","User.html#method-i-get_first_location_after","(current_day)","<p>This method returns the first default location after a given date\n"],["get_last_default_location_before","User","User.html#method-i-get_last_default_location_before","(current_day)","<p>This method returns the last default location before a given date\n"],["get_location","ApplicationController","ApplicationController.html#method-i-get_location","(location_from_input)","<p>This method helps the creators to get a location from the params passed by\nthe user\n"],["get_meeting_participaton","Meeting","Meeting.html#method-i-get_meeting_participaton","(user_to_search)","<p>This method retrieve all the meeting participations linked with the current\nmeeting\n"],["get_name_of_wday","ApplicationController","ApplicationController.html#method-i-get_name_of_wday","(day_of_the_week)","<p>This method is used from the views in order to retrieve the right name to\ndisplay form the index of the …\n"],["get_name_surname","MeetingParticipation","MeetingParticipation.html#method-i-get_name_surname","()","<p>This method is used from a view to retrieve the name and surname of the\nuser to which belongs this meeting …\n"],["get_participants","Meeting","Meeting.html#method-i-get_participants","(response_status_number)","<p>This method retrieve all the participants of a meeting\n"],["get_path_value","Subject","Subject.html#method-i-get_path_value","(path)","<p>This method returns the path value of a subject\n"],["get_starting_point","Travel","Travel.html#method-i-get_starting_point","()","<p>This method returns the starting point of a travel\n"],["get_time","ApplicationRecord","ApplicationRecord.html#method-i-get_time","(integer_time_slot)","<p>This method returns the correct hour format from an integer number that\nrepresent minutes after midnight …\n"],["get_time_from_integer","ApplicationController","ApplicationController.html#method-i-get_time_from_integer","(integer)","<p>This method is used to retrieve the correct time from an integer time\n(minutes from midnight)\n"],["get_user","Travel","Travel.html#method-i-get_user","()","<p>This method returns the user that has to perform the travel\n"],["index","HomepageController","HomepageController.html#method-i-index","()","<p>This method supports the index page of the system\n"],["index","NotificationController","NotificationController.html#method-i-index","()","<p>This method supports the notification page\n"],["index","UserController","UserController.html#method-i-index","()","<p>This method is used for the autocomplete of user search input field\n"],["invite_to_meeting","MeetingHelper","MeetingHelper.html#method-c-invite_to_meeting","(meeting, user)","<p>This function has to be called to create only a meeting_participation (for\nan already existing meeting) …\n"],["invoke","Operator","Operator.html#method-i-invoke","(lval, rval)","<p>This method invoke the action that the operator should perform\n"],["isEmail","ApplicationController","ApplicationController.html#method-i-isEmail","(str)","<p>This method checks if the string passed is a valid email\n"],["log_in","HomepageHelper","HomepageHelper.html#method-i-log_in","(user)","<p>Logs in the given user.\n"],["log_out","HomepageHelper","HomepageHelper.html#method-i-log_out","()","<p>Logs out the current user.\n"],["new","DefaultLocationController","DefaultLocationController.html#method-i-new","()","<p>This method supports the new default location page\n"],["new","MeetingController","MeetingController.html#method-i-new","()","<p>This method supports the new meeting page\n"],["new","UserController","UserController.html#method-i-new","()","<p>This method supports the new user page\n"],["nominate_admin","MeetingController","MeetingController.html#method-i-nominate_admin","()","<p>This method nominate admin a participant of the meeting\n"],["participants_page","MeetingController","MeetingController.html#method-i-participants_page","()","<p>This method supports the participants page\n"],["perform","AcceptInvitationJob","AcceptInvitationJob.html#method-i-perform","(meeting_participation, user)","<p>See the documentation for MeetingHelper@accept_invitation\n"],["perform","CreateMeetingJob","CreateMeetingJob.html#method-i-perform","(start_date, end_date, title, abstract, location, user, invited_users = [])","<p>See the documentation for MeetingHelper@create_meeting\n<p>Note: after creating the meeting it also enques …\n"],["perform","DeclineInvitationJob","DeclineInvitationJob.html#method-i-perform","(meeting_participation, user)","<p>See the documentation for MeetingHelper@decline_invitation\n"],["perform","InviteToMeetingJob","InviteToMeetingJob.html#method-i-perform","(meeting, user)","<p>See the documentation for MeetingHelper@invite_to_meeting\n"],["perform","RecomputeMeetingParticipationsJob","RecomputeMeetingParticipationsJob.html#method-i-perform","(days_of_the_week, user)","<p>See the documentation for MeetingHelper@recompute_meeting_participations\n"],["post_edit","UserController","UserController.html#method-i-post_edit","()","<p>This method manages the actions performed by an user in the edit page\n"],["post_index","HomepageController","HomepageController.html#method-i-post_index","()","<p>This method manages the request made by the user on the homepage\n"],["primary_email","User","User.html#method-i-primary_email","()","<p>This method returns the primary email of the user\n"],["recompute_meeting_participations","MeetingHelper","MeetingHelper.html#method-c-recompute_meeting_participations","(days_of_the_week, user)","<p>Update the schedule for a given user and for all the given days of the week\n<p>days_of_the_week is an Array …\n"],["remove_from_meeting","MeetingController","MeetingController.html#method-i-remove_from_meeting","()","<p>This method delete a participant from a meeting\n"],["resolve_warning","NotificationController","NotificationController.html#method-i-resolve_warning","()","<p>This method supports the resolve warning page where a user can\naccept/decline meetings\n"],["search","UserController","UserController.html#method-i-search","()","<p>This method is used from the autocomplete to retrieve users depending on\nthe params passed by the current …\n"],["search_contacts","UserController","UserController.html#method-i-search_contacts","()","<p>This method is used by the autocomplete process made only between user\ncontacts (to invite them in a …\n"],["settings","UserController","UserController.html#method-i-settings","()","<p>This method supports the settings page\n"],["shortest_path","TravelHelper","TravelHelper.html#method-c-shortest_path","(start_location, end_location, travel_mean = :driving, departure_time = nil, arrival_time = nil)","<p>Call the external shortest path provider to compute the shortest path\nbetween two locations using a given …\n"],["show","DefaultLocationController","DefaultLocationController.html#method-i-show","()","<p>This method supports the show notification page\n"],["show","MeetingController","MeetingController.html#method-i-show","()","<p>This method supports the show meeting page\n"],["show","TravelController","TravelController.html#method-i-show","()","<p>This method supports the show travel page\n"],["show","UserController","UserController.html#method-i-show","()","<p>This method supports the show user page\n"],["show_day","CalendarController","CalendarController.html#method-i-show_day","()","<p>This method supports the page that shows the calendar daily page. It\nretrieves in the correct order all …\n"],["show_month","CalendarController","CalendarController.html#method-i-show_month","()","<p>This method supports the page that shows the calendar monthly page. It\nretrieves in the correct order …\n"],["show_week","CalendarController","CalendarController.html#method-i-show_week","()","<p>This method supports the page that shows the calendar weekly page. It\nretrieves in the correct order …\n"],["update_all_breaks","BreakHelper","BreakHelper.html#method-c-update_all_breaks","(from_date, to_date, user)","<p>Update all the breaks of a given user between from_date and to_date (they\nshould be the same date at …\n"],["update_break","BreakHelper","BreakHelper.html#method-c-update_break","(b, day)","<p>Update a single break in a given day\n<p>b is a Break\n<p>day is a DateTime\n"]]}}